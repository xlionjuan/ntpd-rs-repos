name: Create Repo for ntpd-rs latest

on:
  # schedule:
  #   # Every Saturday at 3AM UTC
  #   - cron: "0 3 * * 6"
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**.md'
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  workflow_dispatch:

env:
    REPO_NAME: xlion-ntpd-rs-apt-repo
    CODENAME: main
    COMPONENTS: main
    ARCHITECTURES: amd64 arm64 armhf i386
    # armhf is ARMv7 (32bit) 
  
jobs:
    verify:
      name: Verify container
      runs-on: ubuntu-latest
      steps:
        - name: Install Cosign
          uses: sigstore/cosign-installer@v3.7.0

        - name: Verify
          run: |
            cosign verify --rekor-url=https://rekor.sigstore.dev \
            --certificate-identity-regexp "https://github.com/xlionjuan/.*" \
            --certificate-oidc-issuer "https://token.actions.githubusercontent.com" \
            ghcr.io/xlionjuan/fedora-createrepo-image:latest

    build:
      runs-on: ubuntu-latest
      needs: verify
      container: ghcr.io/xlionjuan/fedora-createrepo-image:latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Setup Pages
          uses: actions/configure-pages@v5

        - name: Download
          run: bash download.sh

        - name: Move .rpm to rpm folder
          run: mv *.rpm wwwroot/rpm

        - name: Import GPG Key for signing RPMs
          if: github.event_name != 'pull_request'
          run: |
            echo "$GPG_PRIVATE_KEY" | gpg --batch --yes --import
            GPG_PUBLIC_KEY=$(gpg --list-keys --with-colons | grep fpr | head -n1 | cut -d: -f10)

            echo "%_signature gpg
            %_gpg_name $GPG_PUBLIC_KEY" > ~/.rpmmacros
          env:
            GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}

        - name: Sign RPMs
          run: rpm --addsign wwwroot/rpm/*.rpm

        - name: Create rpm repository
          run: createrepo_c wwwroot/rpm

        - name: Sign rpm repository
          run: gpg --detach-sign --armor wwwroot/rpm/repodata/repomd.xml

        - name: Create apt repository
          uses: xlionjuan/apt-repo-action@6904bef9c1e836ccccaac1f541bacf8f58be66ff
          id: create-apt-repo
          with:
            repo-name: ${{ env.REPO_NAME }}
            signing-key: ${{ secrets.GPG_PRIVATE_KEY }}
            codename: ${{ env.CODENAME }}
            components: ${{ env.COMPONENTS }}
            architectures: ${{ env.ARCHITECTURES }}

        - name: Copy apt repo to wwwroot
          run: cp -r ${{ steps.create-apt-repo.outputs.dir }}/* wwwroot/apt

        - name: Sleep 0.5 sec
          run: sleep 0.5

        - name: Clean up GPG Key
          run: rm -rf ~/.gnupg

        - name: Upload Pages artifact
          uses: actions/upload-pages-artifact@v3
          with:
            name: github-pages
            path: wwwroot

    deploy:
      name: Deploy to GitHub Pages
      if: github.event_name != 'pull_request'
      environment:
        name: github-pages
        url: ${{ steps.deployment.outputs.page_url }}
      runs-on: ubuntu-latest
      permissions:
        contents: read
        pages: write
        id-token: write
      needs: build
      steps:
        - name: Deploy to GitHub Pages
          id: deployment
          uses: actions/deploy-pages@v4